'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _immutable = require('immutable');

var _actionTypes = require('../constants/action-types');

var actionTypes = _interopRequireWildcard(_actionTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var initialState = new _immutable.Map();

var queries = function queries() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  switch (action.type) {
    case actionTypes.RESET:
      {
        return new _immutable.Map();
      }
    case actionTypes.MUTATE_START:
    case actionTypes.REQUEST_START:
      {
        var queryKey = action.queryKey;


        return state.deleteIn([queryKey]);
      }
    case actionTypes.MUTATE_FAILURE:
    case actionTypes.REQUEST_FAILURE:
      {
        var _queryKey = action.queryKey;


        return state.mergeIn([_queryKey], (0, _immutable.fromJS)({
          responseBody: action.responseBody,
          responseText: action.responseText,
          responseHeaders: action.responseHeaders
        }));
      }
    default:
      {
        return state;
      }
  }
};

exports.default = queries;